-- Template ISPL file
 Agent  Environment 

   Obsvars :
   outS1: { empty,   trueAAb1AAAtrue,   trueAAb2AAAtrue,   falseAAb1AAAtrue,   falseAAb2AAAtrue };
   outB1: boolean;
   shape: { empty,   S1,   B1 };

   end   Obsvars 

   Vars :
   b2: boolean;
   b1: boolean;
   b3: boolean;
   
   state: { Init, V0, V7, V8, V11, V1, V4, V5, V6, V12, V3, V2, V9, V13, V10 };
   end   Vars 

   Actions = { Init, gotoV0, gotoV7, gotoV8, gotoV11, gotoV1, gotoV4, gotoV5, gotoV6, gotoV12, gotoV3, gotoV2, gotoV9, gotoV13, gotoV10 };

   Protocol :
    ( !(b1 = 0))  and state =  Init : { gotoV0 };
    ( b1 = 0)  and state =  Init : { gotoV7 };
    ( !(b2 = 0) and b1 = 0)  and state =  V7 : { gotoV8 };
    ( b2 = 0 and b1 = 0)  and state =  V7 : { gotoV11 };
    ( !(b2 = 0) and !(b1 = 0))  and state =  V0 : { gotoV1 };
    ( b2 = 0 and !(b1 = 0))  and state =  V0 : { gotoV4 };
    ( !(b3 = 0) and b2 = 0 and !(b1 = 0))  and state =  V4 : { gotoV5 };
    ( b3 = 0 and b2 = 0 and !(b1 = 0))  and state =  V4 : { gotoV6 };
    ( !(b3 = 0) and b2 = 0 and b1 = 0)  and state =  V11 : { gotoV12 };
    ( b3 = 0 and !(b2 = 0) and !(b1 = 0))  and state =  V1 : { gotoV3 };
    ( !(b3 = 0) and !(b2 = 0) and !(b1 = 0))  and state =  V1 : { gotoV2 };
    ( !(b3 = 0) and !(b2 = 0) and b1 = 0)  and state =  V8 : { gotoV9 };
    ( b3 = 0 and b2 = 0 and b1 = 0)  and state =  V11 : { gotoV13 };
    ( b3 = 0 and !(b2 = 0) and b1 = 0)  and state =  V8 : { gotoV10 };

   end   Protocol 
   Evolution :
    outS1 = trueAAb1AAAtrue and shape = S1  and state =  V0 if Action = gotoV0;
    outS1 = falseAAb1AAAtrue and shape = S1  and state =  V7 if Action = gotoV7;
    outS1 = trueAAb2AAAtrue and shape = S1  and state =  V8 if Action = gotoV8;
    outS1 = falseAAb2AAAtrue and shape = S1  and state =  V11 if Action = gotoV11;
    outS1 = trueAAb2AAAtrue and shape = S1  and state =  V1 if Action = gotoV1;
    outS1 = falseAAb2AAAtrue and shape = S1  and state =  V4 if Action = gotoV4;
    outB1 = b3 and shape = B1  and state =  V5 if Action = gotoV5;
    outB1 = true and shape = B1  and state =  V6 if Action = gotoV6;
    outB1 = b3 and shape = B1  and state =  V12 if Action = gotoV12;
    outB1 = true and shape = B1  and state =  V3 if Action = gotoV3;
    outB1 = b3 and shape = B1  and state =  V2 if Action = gotoV2;
    outB1 = b3 and shape = B1  and state =  V9 if Action = gotoV9;
    outB1 = true and shape = B1  and state =  V13 if Action = gotoV13;
    outB1 = true and shape = B1  and state =  V10 if Action = gotoV10;

   end   Evolution 
 end Agent 


 Agent  Attacker 

   Vars :
   nstep: 0..100; 
    
   obsS1L1: { empty,   trueAAb1AAAtrue,   trueAAb2AAAtrue,   falseAAb1AAAtrue,   falseAAb2AAAtrue };
   obsS1L2: { empty,   trueAAb1AAAtrue,   trueAAb2AAAtrue,   falseAAb1AAAtrue,   falseAAb2AAAtrue };
   obsB1L3: boolean;
   obsShapeL3: { empty,   S1,   B1 };
   obsShapeL2: { empty,   S1,   B1 };
   obsShapeL1: { empty,   S1,   B1 };


   end   Vars 

   Actions = {none};

   Protocol :
    Other: {none};
   end   Protocol 

   Evolution :
    (nstep = nstep + 1) if nstep < 1;
    obsS1L1 = Environment.outS1 and obsShapeL1 = Environment.shape and  (nstep = nstep + 1) if nstep = 1;
    obsS1L2 = Environment.outS1 and obsShapeL2 = Environment.shape and  (nstep = nstep + 1) if nstep = 2;
    obsB1L3 = Environment.outB1 and obsShapeL3 = Environment.shape and  (nstep = nstep + 1) if nstep = 3;
    
   end   Evolution 
 end Agent 

 Evaluation 
  eot if Environment.state=Environment.state;
  b2T if Environment.b2=true;
  b2F if Environment.b2=false;
  b1T if Environment.b1=true;
  b1F if Environment.b1=false;
  b3T if Environment.b3=true;
  b3F if Environment.b3=false;

 end Evaluation


 InitStates 
  Environment.state = Init and Environment.shape = empty and Attacker.nstep = 0 and Attacker.obsShapeL1 = empty and Environment.outS1 = empty and Attacker.obsS1L1 = empty and Environment.outS1 = empty and Attacker.obsS1L1 = empty and Attacker.obsShapeL2 = empty and Environment.outS1 = empty and Attacker.obsS1L2 = empty and Environment.outS1 = empty and Attacker.obsS1L2 = empty and Environment.outS1 = empty and Attacker.obsS1L2 = empty and Environment.outS1 = empty and Attacker.obsS1L2 = empty and Attacker.obsShapeL3 = empty and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true and Environment.outB1 = true and Attacker.obsB1L3 = true ;
 end InitStates 

 Formulae 
  AG(!K(Attacker,!(b3T and b3T)) and !K(Attacker,!(b3F and b3F)) and !K(Attacker,!(b3F and b3T)) and !K(Attacker,!(b3T and b3F)) and  eot);
 end Formulae 

