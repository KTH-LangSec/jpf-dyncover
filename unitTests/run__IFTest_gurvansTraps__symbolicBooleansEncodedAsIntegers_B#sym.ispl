-- Template ISPL file
 Agent  Environment 

   Obsvars :
   outS1: { empty,   AfterAtheAtestAonAhA,   BeforeAtheAtestAonAhA };
   outB1: boolean;
   shape: { empty,   S1,   B1 };

   end   Obsvars 

   Vars :
   h: boolean;
   
   state: { Init, V0, V3, V1, V2, V4 };
   end   Vars 

   Actions = { Init, gotoV0, gotoV3, gotoV1, gotoV2, gotoV4 };

   Protocol :
    ( true)  and state =  Init : { gotoV0 };
    ( h = 0)  and state =  V0 : { gotoV3 };
    ( !(h = 0))  and state =  V0 : { gotoV1 };
    ( !(h = 0))  and state =  V1 : { gotoV2 };
    ( h = 0)  and state =  V3 : { gotoV4 };

   end   Protocol 
   Evolution :
    outS1 = BeforeAtheAtestAonAhA and shape = S1  and state =  V0 if Action = gotoV0;
    outB1 = true and shape = B1  and state =  V3 if Action = gotoV3;
    outB1 = h and shape = B1  and state =  V1 if Action = gotoV1;
    outS1 = AfterAtheAtestAonAhA and shape = S1  and state =  V2 if Action = gotoV2;
    outS1 = AfterAtheAtestAonAhA and shape = S1  and state =  V4 if Action = gotoV4;

   end   Evolution 
 end Agent 


 Agent  Attacker 

   Vars :
   nstep: 0..100; 
    
   obsS1L1: { empty,   AfterAtheAtestAonAhA,   BeforeAtheAtestAonAhA };
   obsS1L3: { empty,   AfterAtheAtestAonAhA,   BeforeAtheAtestAonAhA };
   obsB1L2: boolean;
   obsShapeL3: { empty,   S1,   B1 };
   obsShapeL2: { empty,   S1,   B1 };
   obsShapeL1: { empty,   S1,   B1 };


   end   Vars 

   Actions = {none};

   Protocol :
    Other: {none};
   end   Protocol 

   Evolution :
    (nstep = nstep + 1) if nstep < 1;
    obsS1L1 = Environment.outS1 and obsShapeL1 = Environment.shape and  (nstep = nstep + 1) if nstep = 1;
    obsB1L2 = Environment.outB1 and obsShapeL2 = Environment.shape and  (nstep = nstep + 1) if nstep = 2;
    obsS1L3 = Environment.outS1 and obsShapeL3 = Environment.shape and  (nstep = nstep + 1) if nstep = 3;
    
   end   Evolution 
 end Agent 

 Evaluation 
  eot if Environment.state=Environment.state;
  hT if Environment.h=true;
  hF if Environment.h=false;

 end Evaluation


 InitStates 
  Environment.state = Init and Environment.shape = empty and Attacker.nstep = 0 and Attacker.obsShapeL1 = empty and Environment.outS1 = empty and Attacker.obsS1L1 = empty and Attacker.obsShapeL2 = empty and Environment.outB1 = true and Attacker.obsB1L2 = true and Environment.outB1 = true and Attacker.obsB1L2 = true and Attacker.obsShapeL3 = empty and Environment.outS1 = empty and Attacker.obsS1L3 = empty and Environment.outS1 = empty and Attacker.obsS1L3 = empty ;
 end InitStates 

 Formulae 
  AG(!K(Attacker,!(hT and hF)) and !K(Attacker,!(hF and hT)) and !K(Attacker,!(hF and hF)) and !K(Attacker,!(hT and hT)) and  eot);
 end Formulae 

