-- Template ISPL file
 Agent  Environment 

   Obsvars :
   outS1: { empty,   bAAAtrue,   BeforeAtheAtestAonAbA,   AfterAtheAtestAonAbA };
   shape: { empty,   S1 };

   end   Obsvars 

   Vars :
   b: boolean;
   
   state: { Init, V0, V1, V3, V2, V4 };
   end   Vars 

   Actions = { Init, gotoV0, gotoV1, gotoV3, gotoV2, gotoV4 };

   Protocol :
    ( true)  and state =  Init : { gotoV0 };
    ( !(b = 0))  and state =  V0 : { gotoV1 };
    ( b = 0)  and state =  V0 : { gotoV3 };
    ( !(b = 0))  and state =  V1 : { gotoV2 };
    ( b = 0)  and state =  V3 : { gotoV4 };

   end   Protocol 
   Evolution :
    outS1 = BeforeAtheAtestAonAbA and shape = S1  and state =  V0 if Action = gotoV0;
    outS1 = bAAAtrue and shape = S1  and state =  V1 if Action = gotoV1;
    outS1 = bAAAtrue and shape = S1  and state =  V3 if Action = gotoV3;
    outS1 = AfterAtheAtestAonAbA and shape = S1  and state =  V2 if Action = gotoV2;
    outS1 = AfterAtheAtestAonAbA and shape = S1  and state =  V4 if Action = gotoV4;

   end   Evolution 
 end Agent 


 Agent  Attacker 

   Vars :
   nstep: 0..100; 
    
   obsS1L1: { empty,   bAAAtrue,   BeforeAtheAtestAonAbA,   AfterAtheAtestAonAbA };
   obsS1L2: { empty,   bAAAtrue,   BeforeAtheAtestAonAbA,   AfterAtheAtestAonAbA };
   obsS1L3: { empty,   bAAAtrue,   BeforeAtheAtestAonAbA,   AfterAtheAtestAonAbA };
   obsShapeL3: { empty,   S1 };
   obsShapeL2: { empty,   S1 };
   obsShapeL1: { empty,   S1 };


   end   Vars 

   Actions = {none};

   Protocol :
    Other: {none};
   end   Protocol 

   Evolution :
    (nstep = nstep + 1) if nstep < 1;
    obsS1L1 = Environment.outS1 and obsShapeL1 = Environment.shape and  (nstep = nstep + 1) if nstep = 1;
    obsS1L2 = Environment.outS1 and obsShapeL2 = Environment.shape and  (nstep = nstep + 1) if nstep = 2;
    obsS1L3 = Environment.outS1 and obsShapeL3 = Environment.shape and  (nstep = nstep + 1) if nstep = 3;
    
   end   Evolution 
 end Agent 

 Evaluation 
  eot if Environment.state=Environment.state;
  bT if Environment.b=true;
  bF if Environment.b=false;

 end Evaluation


 InitStates 
  Environment.state = Init and Environment.shape = empty and Attacker.nstep = 0 and Attacker.obsShapeL1 = empty and Environment.outS1 = empty and Attacker.obsS1L1 = empty and Attacker.obsShapeL2 = empty and Environment.outS1 = empty and Attacker.obsS1L2 = empty and Environment.outS1 = empty and Attacker.obsS1L2 = empty and Attacker.obsShapeL3 = empty and Environment.outS1 = empty and Attacker.obsS1L3 = empty and Environment.outS1 = empty and Attacker.obsS1L3 = empty ;
 end InitStates 

 Formulae 
  AG(eot and  eot);
 end Formulae 

