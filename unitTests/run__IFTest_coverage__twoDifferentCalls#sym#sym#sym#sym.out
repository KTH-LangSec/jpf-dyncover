CONFIGURATION:
  input domains:
  leaked input expressions: (c) (a)
  harbored input expressions: (b) (d)

OUTPUT FLOW GRAPH:
([root, end, V0, V1, V2, V3], [(root,V0), (V0,end), (root,V1), (V1,end), (root,V2), (V2,end), (root,V3), (V3,end)])

Contains variables: c b a d

V0 = “<” [[ IFF c < d ∧ a < b ]] [[ UTC vacuously true ]]
V1 = “>=” [[ IFF c ≥ d ∧ a < b ]] [[ UTC vacuously true ]]
V2 = “<” [[ IFF c < d ∧ a ≥ b ]] [[ UTC vacuously true ]]
V3 = “>=” [[ IFF c ≥ d ∧ a ≥ b ]] [[ UTC vacuously true ]]


INTERFERENCE FORMULA:
vacuously true ∧ (c = c_bis ∧ a = a_bis) ∧ (b ≠ b_bis ∨ d ≠ d_bis) ∧ ((c < d ∧ a < b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “<”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “<”)) ∨ (c ≥ d ∧ a < b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “>=”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “>=”)) ∨ (c < d ∧ a ≥ b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “<”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “<”)) ∨ (c ≥ d ∧ a ≥ b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “>=”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “>=”)))

SIMPLIFIED INTERFERENCE FORMULA:
vacuously true ∧ (c = c_bis ∧ a = a_bis) ∧ (b ≠ b_bis ∨ d ≠ d_bis) ∧ ((c < d ∧ a < b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “<”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “<”)) ∨ (c ≥ d ∧ a < b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “>=”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “>=”)) ∨ (c < d ∧ a ≥ b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “<”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “<”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “<”)) ∨ (c ≥ d ∧ a ≥ b) ∧ (¬ ((c_bis < d_bis ∧ a_bis < b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis < b_bis) ∧ “>=” = “>=”) ∧ ¬ ((c_bis < d_bis ∧ a_bis ≥ b_bis) ∧ “<” = “>=”) ∧ ¬ ((c_bis ≥ d_bis ∧ a_bis ≥ b_bis) ∧ “>=” = “>=”)))

SMT-BASED VERIFICATION: The program is noninterfering.

TIMING ESTIMATIONS:
  overall: 826.7 ms (826751953)
  model extraction: 99.8 ms (99871988)
  interference formula generation: 3.4 ms (3445397)
  interference formula satisfaction: 37.1 ms (37163558)

OFG SIZE:
  number of nodes: 4
  number of edges: 0
  depth of OFG: 1
  width of OFG: 4

FORMULA SIZE:
  number of distinct variables: 8
  number of atomic formulas: 60
  number of instances of variables or constants: 120

