Testsuite: IFTest_coverage
Tests run: 6, Failures: 0, Errors: 0, Time elapsed: 8.087 sec
------------- Standard Output ---------------
  running jpf with args: +vm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory +vm.storage.class = nil +listener = se.kth.csc.jpf_encover.EncoverListener +encover.debug_mode = true +encover.simplify_ofg = true +encover.simplify_expressions = true +encover.verifiers = SMT +encover.additional_outputs = config, sot, itf_fml, sitf_fml, timings, metrics +encover.byProducts = SOT, ISPL +encover.verifiers = SMT +encover.byProducts = SOT +symbolic.method = IFTest_coverage.oneCall(sym#sym) +encover.leakedInputs = a +encover.harboredInputs = b IFTest_coverage test1
Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.minint=-1000000
symbolic.maxint=1000000
symbolic.minreal=-10000.0
symbolic.maxreal=10000.0
symbolic.undefined=-1000000
JavaPathfinder v6.0 (rev 644) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
application: IFTest_coverage.java
arguments:   test1 

====================================================== search started: 1/20/21 10:21 AM
*************Summary***************
PC is:constraint # = 1
a_1_SYMINT[-1000000] < b_2_SYMINT[-999999]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 1
a_1_SYMINT[-1000000] >= b_2_SYMINT[-1000000]
Return is:  null
***********************************

====================================================== Method Summaries
Inputs: a_1_SYMINT,b_2_SYMINT

oneCall(-1000000,-999999)  --> Return Value: --
oneCall(-1000000,-1000000)  --> Return Value: --

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for oneCall (Path Coverage) </h1>
<table border=1>
<tr><td>a_1_SYMINT</td><td>b_2_SYMINT</td><td>RETURN</td></tr>
<tr><td>-1000000</td><td>-999999</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
</table>

====================================================== results
no errors detected

====================================================== search finished: 1/20/21 10:21 AM
  running jpf with args: +vm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory +vm.storage.class = nil +listener = se.kth.csc.jpf_encover.EncoverListener +encover.debug_mode = true +encover.simplify_ofg = true +encover.simplify_expressions = true +encover.verifiers = SMT +encover.additional_outputs = config, sot, itf_fml, sitf_fml, timings, metrics +encover.byProducts = SOT, ISPL +encover.verifiers = SMT +encover.byProducts = SOT +symbolic.method = IFTest_coverage.twoCalls(sym#sym#sym#sym) +encover.leakedInputs = a, c +encover.harboredInputs = b, d IFTest_coverage test2
Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.minint=-1000000
symbolic.maxint=1000000
symbolic.minreal=-10000.0
symbolic.maxreal=10000.0
symbolic.undefined=-1000000
JavaPathfinder v6.0 (rev 644) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
application: IFTest_coverage.java
arguments:   test2 

====================================================== search started: 1/20/21 10:21 AM
<
<
*************Summary***************
PC is:constraint # = 2
c_5_SYMINT[-1000000] < d_6_SYMINT[-999999] &&
a_3_SYMINT[-1000000] < b_4_SYMINT[-999999]
Return is:  null
***********************************
>=
*************Summary***************
PC is:constraint # = 2
c_5_SYMINT[-1000000] >= d_6_SYMINT[-1000000] &&
a_3_SYMINT[-1000000] < b_4_SYMINT[-999999]
Return is:  null
***********************************
>=
<
*************Summary***************
PC is:constraint # = 2
c_5_SYMINT[-1000000] < d_6_SYMINT[-999999] &&
a_3_SYMINT[-1000000] >= b_4_SYMINT[-1000000]
Return is:  null
***********************************
>=
*************Summary***************
PC is:constraint # = 2
c_5_SYMINT[-1000000] >= d_6_SYMINT[-1000000] &&
a_3_SYMINT[-1000000] >= b_4_SYMINT[-1000000]
Return is:  null
***********************************

====================================================== Method Summaries
Inputs: a_3_SYMINT[-1000000],b_4_SYMINT[-1000000],c_5_SYMINT[-1000000],d_6_SYMINT[-1000000]

twoCalls(-1000000,-1000000(don't care),-1000000,-1000000(don't care))  --> Return Value: --
twoCalls(-1000000,-1000000(don't care),-1000000,-1000000)  --> Return Value: --
twoCalls(-1000000,-1000000,-1000000,-1000000(don't care))  --> Return Value: --
twoCalls(-1000000,-1000000,-1000000,-1000000)  --> Return Value: --

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for twoCalls (Path Coverage) </h1>
<table border=1>
<tr><td>a_3_SYMINT[-1000000]</td><td>b_4_SYMINT[-1000000]</td><td>c_5_SYMINT[-1000000]</td><td>d_6_SYMINT[-1000000]</td><td>RETURN</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
</table>

====================================================== results
no errors detected

====================================================== search finished: 1/20/21 10:21 AM
  running jpf with args: +vm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory +vm.storage.class = nil +listener = se.kth.csc.jpf_encover.EncoverListener +encover.debug_mode = true +encover.simplify_ofg = true +encover.simplify_expressions = true +encover.verifiers = SMT +encover.additional_outputs = config, sot, itf_fml, sitf_fml, timings, metrics +encover.byProducts = SOT, ISPL +encover.verifiers = SMT +encover.byProducts = SOT +symbolic.method = IFTest_coverage.twoIndependentsInOneCall(sym#sym#sym#sym) +encover.leakedInputs = a, c +encover.harboredInputs = b, d IFTest_coverage test3
Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.minint=-1000000
symbolic.maxint=1000000
symbolic.minreal=-10000.0
symbolic.maxreal=10000.0
symbolic.undefined=-1000000
JavaPathfinder v6.0 (rev 644) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
application: IFTest_coverage.java
arguments:   test3 

====================================================== search started: 1/20/21 10:21 AM
*************Summary***************
PC is:constraint # = 2
c_9_SYMINT[-1000000] < d_10_SYMINT[-999999] &&
a_7_SYMINT[-1000000] < b_8_SYMINT[-999999]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 2
c_9_SYMINT[-1000000] >= d_10_SYMINT[-1000000] &&
a_7_SYMINT[-1000000] < b_8_SYMINT[-999999]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 2
c_9_SYMINT[-1000000] < d_10_SYMINT[-999999] &&
a_7_SYMINT[-1000000] >= b_8_SYMINT[-1000000]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 2
c_9_SYMINT[-1000000] >= d_10_SYMINT[-1000000] &&
a_7_SYMINT[-1000000] >= b_8_SYMINT[-1000000]
Return is:  null
***********************************

====================================================== Method Summaries
Inputs: a_7_SYMINT[-1000000],b_8_SYMINT[-1000000],c_9_SYMINT[-1000000],d_10_SYMINT[-1000000]

twoIndependentsInOneCall(-1000000,-1000000(don't care),-1000000,-1000000(don't care))  --> Return Value: --
twoIndependentsInOneCall(-1000000,-1000000(don't care),-1000000,-1000000)  --> Return Value: --
twoIndependentsInOneCall(-1000000,-1000000,-1000000,-1000000(don't care))  --> Return Value: --
twoIndependentsInOneCall(-1000000,-1000000,-1000000,-1000000)  --> Return Value: --

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for twoIndependentsInOneCall (Path Coverage) </h1>
<table border=1>
<tr><td>a_7_SYMINT[-1000000]</td><td>b_8_SYMINT[-1000000]</td><td>c_9_SYMINT[-1000000]</td><td>d_10_SYMINT[-1000000]</td><td>RETURN</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
</table>

====================================================== results
no errors detected

====================================================== search finished: 1/20/21 10:21 AM
  running jpf with args: +vm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory +vm.storage.class = nil +listener = se.kth.csc.jpf_encover.EncoverListener +encover.debug_mode = true +encover.simplify_ofg = true +encover.simplify_expressions = true +encover.verifiers = SMT +encover.additional_outputs = config, sot, itf_fml, sitf_fml, timings, metrics +encover.byProducts = SOT, ISPL +encover.verifiers = SMT +encover.byProducts = SOT +symbolic.method = IFTest_coverage.twoDependentsInOneCall(sym#sym#sym#sym) +encover.leakedInputs = a, c +encover.harboredInputs = b, d IFTest_coverage test4
Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.minint=-1000000
symbolic.maxint=1000000
symbolic.minreal=-10000.0
symbolic.maxreal=10000.0
symbolic.undefined=-1000000
JavaPathfinder v6.0 (rev 644) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
application: IFTest_coverage.java
arguments:   test4 

====================================================== search started: 1/20/21 10:21 AM
*************Summary***************
PC is:constraint # = 2
c_13_SYMINT[-1000000] < d_14_SYMINT[-999999] &&
a_11_SYMINT[-1000000] < b_12_SYMINT[-999999]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 2
c_13_SYMINT[-1000000] >= d_14_SYMINT[-1000000] &&
a_11_SYMINT[-1000000] < b_12_SYMINT[-999999]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 2
c_13_SYMINT[-1000000] < d_14_SYMINT[-999999] &&
a_11_SYMINT[-1000000] >= b_12_SYMINT[-1000000]
Return is:  null
***********************************
*************Summary***************
PC is:constraint # = 2
c_13_SYMINT[-1000000] >= d_14_SYMINT[-1000000] &&
a_11_SYMINT[-1000000] >= b_12_SYMINT[-1000000]
Return is:  null
***********************************

====================================================== Method Summaries
Inputs: a_11_SYMINT[-1000000],b_12_SYMINT[-1000000],c_13_SYMINT[-1000000],d_14_SYMINT[-1000000]

twoDependentsInOneCall(-1000000,-1000000(don't care),-1000000,-1000000(don't care))  --> Return Value: --
twoDependentsInOneCall(-1000000,-1000000(don't care),-1000000,-1000000)  --> Return Value: --
twoDependentsInOneCall(-1000000,-1000000,-1000000,-1000000(don't care))  --> Return Value: --
twoDependentsInOneCall(-1000000,-1000000,-1000000,-1000000)  --> Return Value: --

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for twoDependentsInOneCall (Path Coverage) </h1>
<table border=1>
<tr><td>a_11_SYMINT[-1000000]</td><td>b_12_SYMINT[-1000000]</td><td>c_13_SYMINT[-1000000]</td><td>d_14_SYMINT[-1000000]</td><td>RETURN</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
</table>

====================================================== results
no errors detected

====================================================== search finished: 1/20/21 10:21 AM
  running jpf with args: +vm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory +vm.storage.class = nil +listener = se.kth.csc.jpf_encover.EncoverListener +encover.debug_mode = true +encover.simplify_ofg = true +encover.simplify_expressions = true +encover.verifiers = SMT +encover.additional_outputs = config, sot, itf_fml, sitf_fml, timings, metrics +encover.byProducts = SOT, ISPL +encover.verifiers = SMT +encover.byProducts = SOT +symbolic.method = IFTest_coverage.twoDifferentCalls(sym#sym#sym#sym) +encover.leakedInputs = a, c +encover.harboredInputs = b, d IFTest_coverage test5
Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.minint=-1000000
symbolic.maxint=1000000
symbolic.minreal=-10000.0
symbolic.maxreal=10000.0
symbolic.undefined=-1000000
JavaPathfinder v6.0 (rev 644) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
application: IFTest_coverage.java
arguments:   test5 

====================================================== search started: 1/20/21 10:21 AM
<
*************Summary***************
PC is:constraint # = 2
c_17_SYMINT[-1000000] < d_18_SYMINT[-999999] &&
a_15_SYMINT[-1000000] < b_16_SYMINT[-999999]
Return is:  null
***********************************
>=
*************Summary***************
PC is:constraint # = 2
c_17_SYMINT[-1000000] >= d_18_SYMINT[-1000000] &&
a_15_SYMINT[-1000000] < b_16_SYMINT[-999999]
Return is:  null
***********************************
<
*************Summary***************
PC is:constraint # = 2
c_17_SYMINT[-1000000] < d_18_SYMINT[-999999] &&
a_15_SYMINT[-1000000] >= b_16_SYMINT[-1000000]
Return is:  null
***********************************
>=
*************Summary***************
PC is:constraint # = 2
c_17_SYMINT[-1000000] >= d_18_SYMINT[-1000000] &&
a_15_SYMINT[-1000000] >= b_16_SYMINT[-1000000]
Return is:  null
***********************************

====================================================== Method Summaries
Inputs: a_15_SYMINT[-1000000],b_16_SYMINT[-1000000],c_17_SYMINT[-1000000],d_18_SYMINT[-1000000]

twoDifferentCalls(-1000000,-1000000(don't care),-1000000,-1000000(don't care))  --> Return Value: --
twoDifferentCalls(-1000000,-1000000(don't care),-1000000,-1000000)  --> Return Value: --
twoDifferentCalls(-1000000,-1000000,-1000000,-1000000(don't care))  --> Return Value: --
twoDifferentCalls(-1000000,-1000000,-1000000,-1000000)  --> Return Value: --

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for twoDifferentCalls (Path Coverage) </h1>
<table border=1>
<tr><td>a_15_SYMINT[-1000000]</td><td>b_16_SYMINT[-1000000]</td><td>c_17_SYMINT[-1000000]</td><td>d_18_SYMINT[-1000000]</td><td>RETURN</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: --</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>Return Value: --</td></tr>
</table>

====================================================== results
no errors detected

====================================================== search finished: 1/20/21 10:21 AM
  running jpf with args: +vm.insn_factory.class = gov.nasa.jpf.symbc.SymbolicInstructionFactory +vm.storage.class = nil +listener = se.kth.csc.jpf_encover.EncoverListener +encover.debug_mode = true +encover.simplify_ofg = true +encover.simplify_expressions = true +encover.verifiers = SMT +encover.additional_outputs = config, sot, itf_fml, sitf_fml, timings, metrics +encover.byProducts = SOT, ISPL +encover.verifiers = SMT +encover.byProducts = SOT +symbolic.method = IFTest_coverage.twoCallsWithResults(sym#sym#sym#sym) +encover.leakedInputs = a, c +encover.harboredInputs = b, d IFTest_coverage test6
Running Symbolic PathFinder ...
symbolic.dp=choco
symbolic.string_dp_timeout_ms=0
symbolic.string_dp=none
symbolic.choco_time_bound=30000
symbolic.minint=-1000000
symbolic.maxint=1000000
symbolic.minreal=-10000.0
symbolic.maxreal=10000.0
symbolic.undefined=-1000000
JavaPathfinder v6.0 (rev 644) - (C) RIACS/NASA Ames Research Center


====================================================== system under test
application: IFTest_coverage.java
arguments:   test6 

====================================================== search started: 1/20/21 10:21 AM
<
<
*************Summary***************
PC is:constraint # = 2
c_21_SYMINT[-1000000] < d_22_SYMINT[-999999] &&
a_19_SYMINT[-1000000] < b_20_SYMINT[-999999]
Return is:  CONST_1
***********************************
>=
*************Summary***************
PC is:constraint # = 2
c_21_SYMINT[-1000000] >= d_22_SYMINT[-1000000] &&
a_19_SYMINT[-1000000] < b_20_SYMINT[-999999]
Return is:  CONST_1
***********************************
>=
<
*************Summary***************
PC is:constraint # = 2
c_21_SYMINT[-1000000] < d_22_SYMINT[-999999] &&
a_19_SYMINT[-1000000] >= b_20_SYMINT[-1000000]
Return is:  CONST_0
***********************************
>=
*************Summary***************
PC is:constraint # = 2
c_21_SYMINT[-1000000] >= d_22_SYMINT[-1000000] &&
a_19_SYMINT[-1000000] >= b_20_SYMINT[-1000000]
Return is:  CONST_0
***********************************

====================================================== Method Summaries
Inputs: a_19_SYMINT[-1000000],b_20_SYMINT[-1000000],c_21_SYMINT[-1000000],d_22_SYMINT[-1000000]

twoCallsWithResults(-1000000,-1000000(don't care),-1000000,-1000000(don't care))  --> Return Value: 1
twoCallsWithResults(-1000000,-1000000(don't care),-1000000,-1000000)  --> Return Value: 1
twoCallsWithResults(-1000000,-1000000,-1000000,-1000000(don't care))  --> Return Value: 0
twoCallsWithResults(-1000000,-1000000,-1000000,-1000000)  --> Return Value: 0

====================================================== Method Summaries (HTML)
<h1>Test Cases Generated by Symbolic JavaPath Finder for twoCallsWithResults (Path Coverage) </h1>
<table border=1>
<tr><td>a_19_SYMINT[-1000000]</td><td>b_20_SYMINT[-1000000]</td><td>c_21_SYMINT[-1000000]</td><td>d_22_SYMINT[-1000000]</td><td>RETURN</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: 1</td></tr>
<tr><td>-1000000</td><td>-1000000(don't care)</td><td>-1000000</td><td>-1000000</td><td>Return Value: 1</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000(don't care)</td><td>Return Value: 0</td></tr>
<tr><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>-1000000</td><td>Return Value: 0</td></tr>
</table>

====================================================== results
no errors detected

====================================================== search finished: 1/20/21 10:21 AM
------------- ---------------- ---------------

Testcase: test1 took 3.075 sec
Testcase: test2 took 1.057 sec
Testcase: test3 took 1.14 sec
Testcase: test4 took 0.957 sec
Testcase: test5 took 0.887 sec
Testcase: test6 took 0.901 sec
